// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["debian-openssl-3.0.x"]
}

datasource db {
  provider = "sqlserver"
  url      = env("DATABASE_URL")
}

model Transaction {
  id                String          @id @default(cuid())
  amount            Float
  description       String
  transactionDate   DateTime        @db.Date
  totalAmount       Float
  createdAt         DateTime        @default(now())
  updatedAt         DateTime        @updatedAt
  transactionType   TransactionType @relation(fields: [transactionTypeId], references: [id])
  transactionTypeId String

  @@unique([description, transactionDate, amount, totalAmount])
}

model TransactionType {
  id                  String        @id @default(cuid())
  transactionTypeName String
  description         String
  createdAt           DateTime      @default(now())
  updatedAt           DateTime      @updatedAt
  transaction         Transaction[]
}

model TransactionCategory {
  id                  String           @id @default(cuid())
  transactionCategory String
  description         String
  createdAt           DateTime         @default(now())
  updatedAt           DateTime         @updatedAt
  budgetId            String?
  BudgetEstimate      BudgetEstimate[]
}

model Budget {
  id              String           @id @default(cuid())
  budgetName      String
  budgetStartDate DateTime
  budgetEndDate   DateTime
  budgetActive    Boolean          @default(false)
  createdAt       DateTime         @default(now())
  updatedAt       DateTime         @updatedAt
  budgetEstimate  BudgetEstimate[]
}

model BudgetEstimate {
  id                    String              @id @default(cuid())
  budgetAmount          Float
  createdAt             DateTime            @default(now())
  updatedAt             DateTime            @updatedAt
  budget                Budget              @relation(fields: [budgetId], references: [id])
  budgetId              String
  transactionCategory   TransactionCategory @relation(fields: [transactionCategoryId], references: [id])
  transactionCategoryId String
}
